package test

import (
	"fmt"
	"net"
)

var (
	msg1InBytes = []byte{0x0, 0x0, 0x0, 0x56, 0x8, 0xac, 0xc9, 0xbb, 0x82, 0x6, 0x10,
		0x1, 0x18, 0x1, 0x28, 0xf0, 0xe0, 0xe7, 0xd7, 0x4, 0x32, 0x8, 0x31, 0x30, 0x2e,
		0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x8, 0x31, 0x30, 0x2e, 0x30, 0x2e, 0x30,
		0x2e, 0x32, 0x40, 0xd2, 0x9, 0x48, 0xae, 0x2c, 0x50, 0x6, 0x58, 0xe8, 0x7, 0x68,
		0xf4, 0x3, 0x78, 0x90, 0x3, 0x88, 0x1, 0xc8, 0x1, 0xb2, 0x1, 0x4, 0x70, 0x6f,
		0x64, 0x32, 0xca, 0x1, 0x7, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x8a, 0x2,
		0x9, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31}
	msg2InBytes = []byte{0x0, 0x0, 0x0, 0x5b, 0x8, 0xf6, 0xc8, 0xbb, 0x82, 0x6, 0x10,
		0x1, 0x18, 0x1, 0x28, 0xc0, 0xf0, 0xe7, 0xd7, 0x4, 0x32, 0x8, 0x31, 0x30, 0x2e,
		0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x8, 0x31, 0x30, 0x2e, 0x30, 0x2e, 0x30,
		0x2e, 0x32, 0x40, 0xd2, 0x9, 0x48, 0xae, 0x2c, 0x50, 0x6, 0x58, 0xa0, 0x6, 0x68,
		0xf4, 0x3, 0x78, 0xac, 0x2, 0x88, 0x1, 0x96, 0x1, 0x9a, 0x1, 0x4, 0x70, 0x6f,
		0x64, 0x31, 0xca, 0x1, 0x8, 0x31, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x33, 0x8a,
		0x2, 0x9, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x90, 0x2, 0x83,
		0x25}
)
var templatePacketIPv4 = []byte{0x0, 0xa, 0x0, 0x7c, 0x60, 0x4e, 0xe2, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x2, 0x0, 0x6c, 0x1, 0x0, 0x0, 0x11, 0x0, 0x8, 0x0, 0x4, 0x0, 0xc, 0x0, 0x4, 0x0, 0x7, 0x0, 0x2, 0x0, 0xb, 0x0, 0x2, 0x0, 0x4, 0x0, 0x1, 0x0, 0x97, 0x0, 0x4, 0x0, 0x88, 0x0, 0x1, 0x0, 0x56, 0x0, 0x8, 0x0, 0x2, 0x0, 0x8, 0x80, 0x65, 0xff, 0xff, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x67, 0xff, 0xff, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x6c, 0x0, 0x2, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x89, 0x0, 0x1, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x88, 0xff, 0xff, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x6a, 0x0, 0x4, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x56, 0x0, 0x8, 0x0, 0x0, 0x72, 0x79, 0x80, 0x2, 0x0, 0x8, 0x0, 0x0, 0x72, 0x79}
var dataPacket1IPv4 = []byte{0x0, 0xa, 0x0, 0x5f, 0x60, 0x4e, 0xe4, 0xac, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x4f, 0xa, 0x0, 0x0, 0x1, 0xa, 0x0, 0x0, 0x2, 0x4, 0xd2, 0x16, 0x2e, 0x6, 0x4a, 0xf9, 0xf0, 0x70, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf4, 0x0, 0x4, 0x70, 0x6f, 0x64, 0x32, 0x0, 0x0, 0x2, 0xb, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8}
var dataPacket2IPv4 = []byte{0x0, 0xa, 0x0, 0x5f, 0x60, 0x4e, 0xe4, 0x76, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x4f, 0xa, 0x0, 0x0, 0x1, 0xa, 0x0, 0x0, 0x2, 0x4, 0xd2, 0x16, 0x2e, 0x6, 0x4a, 0xf9, 0xf8, 0x40, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf4, 0x4, 0x70, 0x6f, 0x64, 0x31, 0x0, 0x12, 0x83, 0x2, 0xb, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0xa, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x96}
var templatePacketIPv6 = []byte{0x0, 0xa, 0x0, 0x7c, 0x60, 0x4e, 0xe2, 0x66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x2, 0x0, 0x6c, 0x1, 0x0, 0x0, 0x11, 0x0, 0x1b, 0x0, 0x10, 0x0, 0x1c, 0x0, 0x10, 0x0, 0x7, 0x0, 0x2, 0x0, 0xb, 0x0, 0x2, 0x0, 0x4, 0x0, 0x1, 0x0, 0x97, 0x0, 0x4, 0x0, 0x88, 0x0, 0x1, 0x0, 0x56, 0x0, 0x8, 0x0, 0x2, 0x0, 0x8, 0x80, 0x65, 0xff, 0xff, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x67, 0xff, 0xff, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x6c, 0x0, 0x2, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x89, 0x0, 0x1, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x88, 0xff, 0xff, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x6b, 0x0, 0x10, 0x0, 0x0, 0xdc, 0xba, 0x80, 0x56, 0x0, 0x8, 0x0, 0x0, 0x72, 0x79, 0x80, 0x2, 0x0, 0x8, 0x0, 0x0, 0x72, 0x79}
var dataPacket1IPv6 = []byte{0x0, 0xa, 0x0, 0x83, 0x60, 0x4e, 0xe4, 0xd1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x73, 0x20, 0x1, 0x0, 0x0, 0x32, 0x38, 0xdf, 0xe1, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xfb, 0x20, 0x1, 0x0, 0x0, 0x32, 0x38, 0xdf, 0xe1, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xfc, 0x4, 0xd2, 0x16, 0x2e, 0x6, 0x4a, 0xf9, 0xf0, 0x70, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf4, 0x0, 0x4, 0x70, 0x6f, 0x64, 0x32, 0x0, 0x0, 0x2, 0xb, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8}
var dataPacket2IPv6 = []byte{0x0, 0xa, 0x0, 0x83, 0x60, 0x4e, 0xe4, 0xd1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x73, 0x20, 0x1, 0x0, 0x0, 0x32, 0x38, 0xdf, 0xe1, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xfb, 0x20, 0x1, 0x0, 0x0, 0x32, 0x38, 0xdf, 0xe1, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xfc, 0x4, 0xd2, 0x16, 0x2e, 0x6, 0x4a, 0xf9, 0xf8, 0x40, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf4, 0x4, 0x70, 0x6f, 0x64, 0x31, 0x0, 0x12, 0x83, 0x2, 0xb, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x20, 0x1, 0x0, 0x0, 0x32, 0x38, 0xbb, 0xbb, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0xaa, 0xaa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x96}

func udpClient() {
	host := "localhost:4739"
	socket, err := net.Dial("udp", host)
	if err != nil {
		fmt.Println("connect failed, err:", err)
		return
	}
	defer socket.Close()
	fmt.Println("start:", socket.LocalAddr().String())
	_, err = socket.Write(templatePacketIPv4)
	_, err = socket.Write(dataPacket1IPv4)
	_, err = socket.Write(dataPacket2IPv4)
	if err != nil {
		fmt.Println("send failed, err:", err)
		return
	}
	data := make([]byte, 65575)
	n, err := socket.Read(data)
	fmt.Println("len:", n)
	if err != nil {
		fmt.Println("recv err:", err)
		return
	}
	fmt.Printf("recv:%v count:%v\n", string(data[:n]), n)
}
